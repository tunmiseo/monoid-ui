:focus {
  outline: none;
}
input,
button,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}
figure {
  margin: 0;
}
img {
  vertical-align: middle;
}
.img-responsive {
  display: block;
  max-width: 100%;
}
hr {
  margin-top: var(--editor-line-height);
  margin-bottom: var(--editor-line-height);
  border: 0;
  border-top: 1px solid hsla(2, 97%, 22%, 0.3);
}
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
body {
  margin: 0;
}
audio,
canvas,
progress,
video {
  vertical-align: baseline;
}
audio:not([controls]) {
  display: none;
}
a:active,
a:hover {
  outline: 0;
}
abbr[title] {
  border-bottom: 1px dotted;
}
b,
strong {
  font-weight: bold;
}
dfn {
  font-style: italic;
}
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}
small {
  font-size: 80%;
}
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sup {
  top: -0.5em;
}
sub {
  bottom: -0.25em;
}
hr {
  box-sizing: content-box;
  height: 0;
}
pre {
  overflow: auto;
}
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0;
}
button,
select {
  text-transform: none;
}
button,
input[type="reset"],
input[type="submit"] {
  cursor: pointer;
}
button[disabled],
html input[disabled] {
  cursor: default;
}
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}
input[type="search"] {
  -webkit-appearance: textfield;
  box-sizing: content-box;
}
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
fieldset {
  border: none;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}
legend {
  padding: 0;
}
optgroup {
  font-weight: bold;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
td,
th {
  padding: 0;
}
*,
*:before,
*:after {
  box-sizing: border-box;
}
html,
body {
  width: 100%;
  height: 100%;
  overflow: hidden;
  contain: strict;
}
body {
  color: hsla(220, 10%, 87%, 0.9);
  text-shadow: 0 0 0.25em hsla(0, 0%, 52%, 0.33), 0 0 0.15em hsla(229, 30%, 86%, 0.23);
}
html {
  font-family: Avenir, system-ui, '.SFNSText-Regular', 'SF UI Text', 'Lucida Grande', 'Segoe UI', Ubuntu, Cantarell, sans-serif;
  font-size: calc(0.16vh + 0.9vw);
  line-height: 1.42857143;
}
:root {
  background: transparent;
  all: unset;
}
*,
*:before,
*:after {
  box-sizing: border-box;
}
html,
body {
  width: 100vw;
  height: 100vh;
  overflow: auto;
  contain: strict;
}
body,
html {
  font-family: "SF Pro Display", system-ui;
  max-height: unset !important;
  max-width: 100vw !important;
  overflow-y: hidden;
  overscroll-behavior: none;
}
body body,
html body {
  transition: 0.1s ease-in;
}
body body:not(.is-blurred),
html body:not(.is-blurred) {
  filter: contrast(1.05) brightness(0.975);
}
body body.is-blurred,
html body.is-blurred {
  transition: 0.1s ease-out;
}
html {
  font-family: Avenir, system-ui, '.SFNSText-Regular', 'SF UI Text', 'Lucida Grande', 'Segoe UI', Ubuntu, Cantarell, sans-serif;
  font-size: calc(0.16vh + 0.9vw);
  --font-size: calc(0.16vh + 0.9vw);
  line-height: calc(var(--font-size)*1.1);
  color: hsla(220, 10%, 87%, 0.9);
}
:root,
html {
  font-family: SF Pro Display !important;
  background: hsla(210, 20%, 22.5%, 0.8) !important;
}
:root [class*="mask"],
html [class*="mask"],
:root body,
html body,
:root atom-dock,
html atom-dock,
:root atom-pane,
html atom-pane,
:root atom-panel,
html atom-panel,
:root atom-workspace,
html atom-workspace,
:root atom-pane-container,
html atom-pane-container,
:root atom-panel-container,
html atom-panel-container,
:root .inset-panel,
html .inset-panel,
:root .tool-panel,
html .tool-panel,
:root [class*=atom],
html [class*=atom],
:root .gutter,
html .gutter {
  border: none !important;
  background-color: transparent;
  background: transparent;
  -webkit-font-smoothing: antialiased;
  text-rendering: geometricPrecision;
}
atom.vertical,
atom-workspace.vertical,
atom-axis.vertical,
atom-workspace-axis.vertical,
atom.horizontal,
atom-workspace.horizontal,
atom-axis.horizontal,
atom-workspace-axis.horizontal,
atom,
atom-workspace,
atom-axis,
atom-workspace-axis {
  background: transparent;
}
atom-pane,
atom-panel,
atom-dock,
atom-pane-container,
atom-panel-container,
atom-dock-container {
  background: transparent;
}
atom-panel-container.bottom {
  position: fixed;
  flex-grow: 1;
  left: 0 !important;
  bottom: 1.28rem;
  min-width: -webkit-fill-available;
  z-index: 1000;
  background: hsla(202, 18%, 20%, 0.1) !important;
}
atom-panel-container.bottom .editor-container atom-text-editor {
  background: hsla(210, 10%, 15%, 0.47) !important;
  border-radius: 2px;
  -webkit-mask-image: linear-gradient(to bottom, hsla(0, 10%, 10%, 0.1), hsla(0, 10%, 10%, 0.7) 10%, hsl(0, 10%, 10%), hsla(0, 0%, 0%, 0.7) 90%, hsla(0, 0%, 0%, 0.1));
}
atom-panel-container.bottom button.btn {
  font-size: 0.85rem !important;
  font-family: SF Display;
  font-family: "SF Pro Display";
}
.gutter-container {
  position: absolute !important;
}
atom-text-editor .gutter .line-number {
  display: inline-flex;
  align-items: center;
  flex-flow: column nowrap;
}
atom-text-editor .gutter-container .gutter {
  position: absolute;
  margin: 0 auto;
}
atom-text-editor .gutter-container .gutter.line-numbers > .dummy ~ * {
  display: flex;
  flex-flow: column nowrap;
  justify-content: space-evenly;
  letter-spacing: -0.1em;
}
atom-text-editor {
  background: hsla(213, 10%, 20%, 0.01) !important;
}
atom-text-editor .cursor-line {
  background: hsla(213, 10%, 20%, 0.1) !important;
}
atom-text-editor,
.editor {
  line-height: 1.0625;
  font-family: Inconsolata;
  overscroll-behavior: none;
  overflow-y: hidden;
  box-sizing: border-box;
}
atom-text-editor:not([mini]),
.editor:not([mini]) {
  contain: layout;
}
@media screen and (min-height: 2160px) {
  .icon-file-text::before {
    font-weight: normal;
    font-style: normal;
    display: inline-block;
    line-height: 1.05;
    -webkit-font-smoothing: antialiased;
    text-decoration: none;
    font-size: calc(var(--editor-font-size)*1.3) !important;
    width: 1em;
    height: 1em;
    content: "\f011";
  }
  .terminal,
  .terminal * {
    font-size: calc(var(--editor-font-size)*4.5);
  }
}
@media screen and (max-height: 768px) {
  .icon-file-text::before {
    -webkit-font-smoothing: antialiased;
    display: inline-block;
    font-size: calc(var(--editor-font-size)*.75);
    font-style: normal;
    font-weight: normal;
    height: 1em;
    line-height: 1;
    text-decoration: none;
    width: 1em;
    content: "\f011";
  }
  .tab {
    font-size: calc(var(--editor-font-size)*.7) !important;
  }
}
@media screen and (min-height: 2160px) {
  atom-text-editor {
    font-size: calc(var(--editor-font-size)*1.15) !important;
  }
}
@media screen and (min-height: 768px) and (max-height: 1800px) {
  atom-text-editor {
    font-size: calc(var(--editor-font-size)*0.85) !important;
  }
}
@media screen and (max-height: 768px) {
  atom-text-editor {
    font-size: calc(var(--editor-font-size)*.65) !important;
  }
}
@media screen and (max-height: 768px) {
  .status-bar {
    font-size: calc(var(--editor-font-size)*.65);
  }
}
@media screen and (max-height: 768px) {
  html {
    font-size: calc(var(--editor-font-size)*1.2);
  }
}
@media screen and (max-height: 768px) {
  .tab {
    font-size: calc(var(--editor-font-size)*0.7);
  }
}
@media screen and (max-height: 768px) {
  .terminal {
    font-size: calc(var(--editor-font-size)*0.7);
  }
}
@media screen and (max-height: 768px) {
  .icon-file-text::before {
    font-size: calc(var(--editor-font-size)*0.75);
  }
}
