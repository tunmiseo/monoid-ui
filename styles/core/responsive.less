// main: ../../index.less
@media screen and (min-height: 2160px) {
    @icon-font-size: calc(~"var(--editor-font-size)*1.3") !important;

    .icon-file-text::before {
        font-weight           : normal;
        font-style            : normal;
        display               : inline-block;
        line-height           : 1.05;
        -webkit-font-smoothing: antialiased;
        text-decoration       : none;
        font-size             : @icon-font-size;
        width                 : 1em;
        height                : 1em;
        content               : "\f011";
    }

    .terminal {
        @icon-font-size: calc(~"var(--editor-font-size)*4.5");

        &,
        * {
            font-size: @icon-font-size;

        }
    }
}

@resolution: 768px;
@scale: @scale-768;
@scale-768: 1.2;
@tab-768 : calc(~"var(--editor-font-size)*.7");
@media screen and (max-height: 768px) {

    @icon-font-size: calc(~"var(--editor-font-size)*.75");
    @tab-768-size  : calc(~"var(--editor-font-size)*.7");

    .icon-file-text::before {
        -webkit-font-smoothing: antialiased;
        display               : inline-block;
        font-size             : @icon-font-size;
        font-style            : normal;
        font-weight           : normal;
        height                : 1em;
        line-height           : 1;
        text-decoration       : none;
        width                 : 1em;
        content               : "\f011";
    }

    .tab {
        font-size: @tab-768-size !important;
    }

}
.responsive(@resolution; @scale:false; @selector:html; @rules:false) {
    & when not (isruleset(@rules)) {
        .responsive(@resolution; @scale; @selector; @rules:{});
    }

    & when (isruleset(@rules)) {
        & when (@scale=false) {
            @media screen and (max-height: @resolution) {
                @rules();
            }
        }

        & when not (@scale = false) {
            @size: calc(~"var(--editor-font-size)*@{scale}");
            .responsive(@resolution, @rules:{ @{selector} { font-size: @size; @rules(); } ;});
        }
    }
}


@media screen and (min-height: 2160px) {
    @editor-font-size: calc(~"var(--editor-font-size)*1.15") !important;
    atom-text-editor {
        font-size:@editor-font-size;
    }
}


@scale-1800: 0.85;
@res-1800: 768px, 1800px;

@media screen and (min-height: extract(@res-1800, 1)) and (max-height: extract(@res-1800, 2)) {
    @editor-font-size: calc(~"var(--editor-font-size)*@{scale-1800}") !important;
    atom-text-editor {
        font-size:@editor-font-size;
    }
}

@media screen and (max-height: 768px) {
    @editor-font-size: calc(~"var(--editor-font-size)*.65") !important;
    atom-text-editor {
        font-size:@editor-font-size;
    }
}

@tab-768 : 0.7;
@res-768: 768px;
@scale-768: 1.2;
@icon-768 : 0.75;
@terminal-768 : 0.7;

@media screen and (max-height: 768px) {
    @status-768-size  : calc(~"var(--editor-font-size)*.65");
    .status-bar {
        font-size       : @status-768-size;
    }
}
.responsive(@res-768, @scale-768, ~"html");
.responsive(@res-768, @tab-768, ~".tab");
.responsive(@res-768, @terminal-768, ~".terminal");
.responsive(@res-768, @icon-768, ~".icon-file-text::before");
