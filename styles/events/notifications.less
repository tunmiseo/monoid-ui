// main: ../../index.less
@import (reference) '../ui-variables';

@base: ~"atom-notifications atom-notification";
@text-color-notification: hsla(220, 4%, 65%, 0.9);
.note(@state: either; @modal: base) {
    & when (@state = either) and (@modal = base) {
        top: unset;
        clear: unset;
        float: unset;
        width: unset;
        margin: .5em 0 0 0;
        padding: 0 0 0 1em;
        overflow: hidden;
        position: relative;
        flex-basis: 2.5vh;
        transition+: 2s linear all 1.2s, 1s linear translate 4s;
        color      : @text-color-highlight;
        max-height: min-content;
        will-change: height, opacity;

    }
    & when (@state = hover) {
        & when(@modal = base) {
            flex-grow  : 1;
            flex-shrink: .001;
            opacity    : 1;
            filter: brightness(1.2);
            transition+: 2s linear all 1.2s, 1s linear translate 4s;
            .content, .message, .detail, .meta {
                transition: 1s ease all 1.2s, 1s ease height 1.2s;
                will-change: height, opacity, scale, translate;
            }
        }

        & when(@modal = message) {
            max-height: fit-content;
            max-width              : 100%;

        }

        & when(@modal = detail) {
            .detail-content {
                scale    : 1 1;
                opacity  : 1;
                translate: 0 -10%;
            }
        }

        & when(@modal = meta) {
            scale    : 1 1;
            opacity  : 1;
            translate: 0 -10%;
        }
    }
    & when (@state = unhover) {
        & when(@modal = base) {
            flex-grow  : .001;
            flex-shrink: 1;
            opacity    : .7;
            color      : @text-color-highlight;
            transition: 2s linear all 3s, 0.5s linear translate 3s;
            .content, .message, .detail, .meta {
                transition: 1s ease all 3s, 1s ease height 3s;
                will-change: height, opacity, scale, translate;
            }
            .close-icon {
                opacity: 0;
            }
            .content {
                max-width: 15vw;
            }
        }

        & when(@modal = message) {
            max-height: 5em;
            max-width              : 15vw;

        }

        & when(@modal = detail) {
            .detail-content {
                scale    : 1 0;
                translate: 0 -10%;
            }
        }

        & when(@modal = meta) {
            scale    : 1 0;
            translate: 0 -10%;
        }
    }
}

.noteset(@state) {
    .note(unhover);
    .message { .note(unhover, message); }
    .detail { .note(unhover, detail); }
    .meta { .note(unhover, meta); }
}

atom-notifications {
    top        : unset;
    right      : 0;
    bottom     : unset;
    height     : 85vh;
    display    : flex;
    padding    : 0 !important;
    margin: auto 0;
    position   : fixed;
    flex-flow  : column-reverse nowrap;
    font-size  : unset;
    overflow-y : hidden;
    box-sizing : content-box;
    transition : 2s linear all;
    justify-content: center;
    align-items: center;
    atom-notification {
        .note();
        &:hover {
            .note(hover);
            .message { .note(hover, message); }
            .detail { .note(hover, detail); }
            .meta { .note(hover, meta); }
        }
        &:not(:hover) {
            .note(unhover);
            .message { .note(unhover, message); }
            .detail { .note(unhover, detail); }
            .meta { .note(unhover, meta); }
        }
    }
    &:hover, &:focus {

        atom-notification { .note(hover); }
        atom-notification:hover {
            .note(hover);
            .message { .note(hover, message); }
            .detail { .note(hover, detail) }
            .meta { .note(hover, detail) }
        }
        atom-notification:not(:hover) {
            .note(unhover);
            .message { .note(unhover, message); }
            .detail { .note(unhover, detail) }
            .meta { .note(unhover, meta) }
        }

    }

    &:not(:hover) {
        atom-notification {.note(unhover); }
        atom-notification:hover {
            .note(hover);
            .message { .note(hover, message); }
            .detail { .note(hover, detail); }
            .meta { .note(hover, meta); }
        }
        atom-notification:not(:hover) {
            .note(unhover);
            .message { .note(unhover, message); }
            .detail { .note(unhover, detail); }
            .meta { .note(unhover, meta); }
        }
    }
}

@{base} {
    background-color: hsla(208, 10%, 5%, 0.5); //transparent;
    border-radius   : .5em;
    filter: drop-shadow(0 0 0.001 black);
    z-index: 500;

    &,
    &.error,
    &.fatal,
    &.info,
    &.success,
    &.warning {
        white-space: normal;

        .content {
            .item {
                padding: .8em;
            }
            > * {
                background: transparent;
            }
            display         : flex;
            flex-flow       : column nowrap;
            max-height      : min-content;
            background-color: transparent;
            justify-content : flex-start;

            .message {
                color              : saturate(lighten(@text-color-notification, 1%),1%);
                margin             : 0;
                display            : flex;
                font-size          : 1.075vh;
                overflow-x         : auto;
                overflow-y         : hidden;
                font-family        : SFNS Display;
                font-weight        : 300;
                padding-top        : 1em;
                align-items        : center;
                white-space        : nowrap;
                text-overflow      : ellipsis;
                letter-spacing     : .05em;
                text-transform     : lowercase;
                -webkit-text-stroke: .6px @text-color;
                p {
                    display: contents;
                }
            }

            .detail {
                display: contents;

                .detail-content {
                    font-size       : .9vh !important;
                    background-color: hsla(208, 10%, 6%, 0.3) !important;
                    max-height      : min-content;
                    white-space     : normal;
                    padding         : 1em;
                    opacity         : .9;
                    transition      : 1s ease all;
                }
            }

            .meta {
                &,
                * {
                    font-family: Inconsolata;
                }

                .description {
                    font-size     : .9vh;
                    font-weight   : 100;
                    text-transform: lowercase;
                    line-height   : 1;
                    letter-spacing: -0.01em;

                    p {
                        font-size: .9vh;
                    }

                    ul {
                        padding: .1em;
                    }
                }
            }
        }

        * ul {
            list-style-type: none;

            li::before {
                content      : "\f078";
                font-family  : "Octicons Regular";
                display      : inline-block;
                position     : relative;
                top          : .13em;
                right        : 0;
                padding-right: .5em;
            }
        }

        strong {
            font-weight: 100;
            // color: @text-color-highlight;
            text-shadow: 0 0 .01px, 0 0 .005px;
        }

        &.icon {
            &::before {
                opacity: .5;
                // display: none !important;
            }
        }

        .close {
            color: white;
        }

        :empty {
            display: none;
        }
    }

    &.info {
        .content {
            .message {}

            .detail {
                color: hsla(220, 25%, 42%,0.75);//hsl(208, 100%, 65%);
            }

            .meta {
                color: @text-color-pre;

                .description p,
                p {
                    color      : hsla(220, 25%, 42%,0.75);//hsla(208, 100%, 60%, 0.96);
                    font-size  : 1vh;
                    font-weight: 100;
                }
            }
        }
    }

    &.success {
        box-shadow : inset 40px 0 40px -38px hsla(175, 58%, 37%, 0.6);//hsla(138, 85%, 30%, 0.75);
        border     : .5px solid transparent;
        border-left: none;

        .content {
            color: hsla(175, 58%, 37%, 0.6);//hsl(138, 60%, 45%);
        }
    }

    &.warning {
        .content {
            color: hsla(330, 40%, 49%, 0.65);//hsl(40, 70%, 65%);
        }
    }

    &.error {
        box-shadow: inset 5px 0 5px -4px hsla(340, 80%, 40%, 0.75);

        .content {
            color: hsla(345, 40%, 50%, 0.8);
            .detail {
                .detail-content {
                    color: hsla(345, 40%, 50%, 0.8);
                }

                .line {}
            }
        }



        code {
            background: hsla(340, 100%, 30%, 1);
            color     : @text-color-pre;
            // font-size : .85vh;
        }
    }

    &.fatal {
        .content {
            color: hsla(0, 100%, 50%, 1);

            .detail {
                .detail-content {
                    color: hsla(353, 70%, 50%, 0.95);
                }

                .line {
                    // font-family: Roboto Mono;
                    // font-size  : .9vh;
                }

                .stack-toggle {
                    margin   : 0;
                    font-size: 0;
                    width    : fit-content;
                    margin   : 0 auto;
                    display  : block;
                }

                .stack-container {
                    background : hsla(0, 0%, 2%, 0.15);
                    white-space: pre-line;
                    color      : hsla(355, 90%, 55%, 1);
                    padding    : 0 1em;
                    margin     : 0;
                    // font-size: 90%;
                    .line {
                        // font-family: Inconsolata;
                        padding    : 0 1em;
                        max-width  : 90%;
                        margin     : 0 auto;
                        font-size  : 1.25em;
                        overflow   : hidden;
                    }
                }
            }

            .meta {
                color      : @text-color-pre;
                font-family: Avenir;

                &,
                a {
                    // font-size: .85vh;

                }

                a {
                    color: hsla(347, 70%, 50%, 0.95);
                }
            }
        }
    }

}

@{base} {
    &:not(:hover) .close-all.btn,
    .close-all.btn:not(:hover) {
        &,
        &::before {
            // position        : absolute;
            min-width       : 50%;
            height          : 100%;
            background-color: transparent;
            display         : block;

            min-width : 2vw;
            min-height: 2vw;
        }

    }

    .close:empty {
        position        : absolute;
        min-width       : 100%;
        height          : 100%;
        background-color: transparent;
        display         : block;

        &::before {
            content: "";
        }
    }

}

@{base} .close-all.btn {

    align-items    : center;
    color          : saturate(darken(@text-color-notification, 15%),.5%) !important;
    display        : flex;
    font-size      : 1rem;
    justify-content: flex-end;
    line-height    : 1;
    margin         : 0;
    min-height     : 1em;
    min-width      : 1em;
    padding        : 2px;
    position       : fixed !important;
    right          : 0 !important;
    top            : 0 !important;
    bottom         : unset !important;
    left           : unset !important;

    &:before {
        all           : unset;
        content       : "close";
        font-family   : "Material Icons";
        font-size     : .9vh;
        display       : block;
        align-items   : center;

        vertical-align: middle;
        padding-right : .5em;

        position      : absolute !important;
        right         : 0;
        top           : 0;

    }

    &:after {
        content  : "";
        font-size: .9vh;
        position : fixed !important;
        right    : 0;
        top      : 0;
    }
}
